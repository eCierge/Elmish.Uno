name: Publish to MyGet

on:
  push:
    branches:
      - uno

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true

jobs:
  build:

    runs-on: windows-2022

    steps:

    - name: Check-out
      uses: actions/checkout@v4

    - name: Set Build Version
      run: |
        cd src/Elmish.Uno
        $version = "$env:GITHUB_REF_NAME".Substring("releases/".Length)
        $File = (
          Select-Xml -XPath "/Project/PropertyGroup[@Label='NuGet']/Version" -Path Elmish.Uno.fsproj
        )[0].Node
        $File.InnerText = $version
        $File.OwnerDocument.Save((Join-Path $PWD.ProviderPath Elmish.Uno.fsproj))
        echo "VERSION=$version" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf8 -Append
      shell: pwsh

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 9.0.x

    - name: Add the GitHub and MyGet sources
      run: |
        dotnet nuget add source --username USERNAME --password ${{secrets.GITHUB_TOKEN}} --store-password-in-clear-text --name "github.com" "https://nuget.pkg.github.com/fsprojects/index.json"
        dotnet nuget add source --username USERNAME --password ${{secrets.MYGET_TOKEN}} --store-password-in-clear-text --name "myget.org" "https://www.myget.org/F/elmish_uno/api/v3/index.json"

    - name: Install local tools
      run: dotnet tool restore

    - name: Restore NuGet packages
      run: dotnet restore Elmish.Uno.sln

    - name: Build
      run: dotnet build --no-restore Elmish.Uno.sln --configuration Release -maxcpucount

    - name: Test
      run: dotnet test --no-build --configuration Release src/Elmish.Uno.Tests/Elmish.Uno.Tests.fsproj

    - name: Pack
      run: |
        cd src/Elmish.Uno
        dotnet pack --no-build --configuration Release /p:ContinuousIntegrationBuild=true -o ../../nuget

    - name: Publish to MyGet
      run: |
        dotnet nuget push nuget/Elmish.Uno.${{env.VERSION}}.{nupkg,snupkg} -s "github.com" -k ${{secrets.GITHUB_TOKEN}} --skip-duplicate
        dotnet nuget push nuget/Elmish.Uno.${{env.VERSION}}.{nupkg,snupkg} -s "myget.org" -k ${{secrets.MYGET_SECRET}} --skip-duplicate

